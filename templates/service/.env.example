# Canonical MCP service environment template.
# Copy this file to services/<service>/.env and adjust values before running docker compose.
# See services/mcp-test-server/.env.example for a fully populated sample.

## Keycloak / OAuth
# Realm configured in Keycloak for this service
KEYCLOAK_REALM=your-realm
# Confidential client credentials for the MCP service
CLIENT_ID=your-service-client
CLIENT_SECRET=replace-with-generated-secret
MCP_SERVICE_NAME=service-mcp
MCP_SERVICE_NAME_HUMAN="Service MCP"
MCP_SERVICE_NAME_MODEL=service_mcp
MCP_SERVICE_DESCRIPTION="Example MCP service"
# Update KEYCLOAK_REALM and OIDC_ISSUER to match your deployment
OIDC_ISSUER=http://127.0.0.1:5050/auth/realms/your-realm
# Audience your MCP service will validate (typically matches MCP_PUBLIC_BASE_URL)
OIDC_AUDIENCE=http://127.0.0.1:8765/mcp

## Service metadata
MCP_PUBLIC_HOST=service.local
MCP_BUILD_CONTEXT=./services/service
MCP_PUBLIC_BASE_URL=http://service.local/mcp
PRM_RESOURCE_URL=http://service.local/mcp

## Networking / compose options
# PORT=
REQUIRE_AUTH=true
ENABLE_STREAMABLE=true
ENABLE_SSE=false
ALLOWED_ORIGINS=http://127.0.0.1:3333,http://localhost:3333
DEBUG_HEADERS=false
MCP_NETWORK_EXTERNAL=traefik
# Uncomment to join an additional docker network
# MCP_NETWORK_INTERNAL=service-internal

## Optional manifest overrides
MCP_SERVER_NAME=${MCP_SERVICE_NAME}
MCP_SERVER_VERSION=0.1.0
MCP_NAME_HUMAN=${MCP_SERVICE_NAME_HUMAN}
MCP_NAME_MODEL=${MCP_SERVICE_NAME_MODEL}
MCP_DESCRIPTION_HUMAN=${MCP_SERVICE_DESCRIPTION}
MCP_DESCRIPTION_MODEL=${MCP_SERVICE_DESCRIPTION}

## Downstream system placeholders
# BACKEND_BASE_URL=https://backend.example.com
# BACKEND_API_TOKEN=change-me

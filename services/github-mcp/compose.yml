services:
  github-mcp:
    # Opt-in via `scripts/compose.sh --profile github-mcp â€¦` or COMPOSE_PROFILES=github-mcp.
    profiles:
      - github-mcp
    build:
      context: ${MCP_BUILD_CONTEXT:-..}
      dockerfile: ${MCP_DOCKERFILE:-services/github-mcp/Dockerfile}
    env_file:
      - ./services/github-mcp/.env
    environment:
      - MCP_NAME_HUMAN=${GITHUB_MCP_SERVICE_NAME_HUMAN:-github-mcp service}
      - MCP_NAME_MODEL=${GITHUB_MCP_SERVICE_NAME_MODEL:-github-mcp}
      - MCP_DESCRIPTION_HUMAN=${GITHUB_MCP_SERVICE_DESCRIPTION:-Describe your github-mcp service}
      - MCP_DESCRIPTION_MODEL=${GITHUB_MCP_SERVICE_DESCRIPTION:-Describe your github-mcp service}
    healthcheck:
      test:
        - CMD-SHELL
        - "node -e \"const p = process.env.PORT || 8770; const url = 'http://127.0.0.1:' + p + '/healthz'; fetch(url).then(r => process.exit(r.ok ? 0 : 1)).catch(() => process.exit(1));\""
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '${MCP_CPU_LIMIT:-0.50}'
          memory: ${MCP_MEMORY_LIMIT:-256M}
        reservations:
          memory: ${MCP_MEMORY_RESERVATION:-128M}
    networks:
      - proxy
    labels:
      - traefik.enable=true
      - traefik.docker.network=${MCP_NETWORK_EXTERNAL:-traefik}
      - traefik.http.routers.github-mcp.rule=Host(`${MCP_PUBLIC_HOST:-mcp-service.example.com}`)
      - traefik.http.routers.github-mcp.entrypoints=websecure
      - traefik.http.routers.github-mcp.tls=true
      - traefik.http.services.github-mcp.loadbalancer.server.port=${PORT:-8770}

networks:
  proxy:
    external: true
    name: ${MCP_NETWORK_EXTERNAL:-traefik}
